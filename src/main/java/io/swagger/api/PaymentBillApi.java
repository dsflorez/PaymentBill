/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.CreateRequest;
import io.swagger.model.Errors;
import io.swagger.model.GenericResponse;
import io.swagger.model.ListResponse;
import io.swagger.model.UpdateRequest;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-03-20T16:20:35.844Z[GMT]")
@Api(value = "payment-bill", description = "the payment-bill API")
public interface PaymentBillApi {

    @ApiOperation(value = "create a payment bill", nickname = "create", notes = "create a payment bill", response = GenericResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "operation successful", response = GenericResponse.class),
        @ApiResponse(code = 424, message = "operation error", response = Errors.class) })
    @RequestMapping(value = "/payment-bill",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<GenericResponse> create(@ApiParam(value = "body" ,required=true )  @Valid @RequestBody CreateRequest body
);


    @ApiOperation(value = "Delete one paymet bill by id", nickname = "delete", notes = "", response = GenericResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A user object.", response = GenericResponse.class),
        @ApiResponse(code = 424, message = "response errors", response = Errors.class),
        @ApiResponse(code = 200, message = "Unexpected error") })
    @RequestMapping(value = "/payment-bill",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<GenericResponse> delete(@ApiParam(value = "paymet bill ID",required=true) @PathVariable("id") String id
);


    @ApiOperation(value = "Get pauments bill", nickname = "paymentBillClientDocumentClientDocumentTypeGet", notes = "", response = ListResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A user object.", response = ListResponse.class),
        @ApiResponse(code = 424, message = "response errors", response = Errors.class) })
    @RequestMapping(value = "/payment-bill/{clientDocument}/{clientDocumentType}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ListResponse> paymentBillClientDocumentClientDocumentTypeGet(@ApiParam(value = "client document number",required=true) @PathVariable("clientDocument") String clientDocument
,@ApiParam(value = "client document type",required=true) @PathVariable("clientDocumentType") String clientDocumentType
);


    @ApiOperation(value = "Get pauments bill", nickname = "paymentBillIdGet", notes = "", response = ListResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A user object.", response = ListResponse.class),
        @ApiResponse(code = 424, message = "response errors", response = Errors.class) })
    @RequestMapping(value = "/payment-bill/{id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<ListResponse> paymentBillIdGet(@ApiParam(value = "payment bill ID",required=true) @PathVariable("id") String id
);


    @ApiOperation(value = "Update one paymet bill by id", nickname = "update", notes = "", response = GenericResponse.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "operation successful", response = GenericResponse.class),
        @ApiResponse(code = 424, message = "operation error", response = Errors.class) })
    @RequestMapping(value = "/payment-bill",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.PUT)
    ResponseEntity<GenericResponse> update(@ApiParam(value = "body" ,required=true )  @Valid @RequestBody UpdateRequest body
);

}
